"""
    –≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
    –í–∫–ª—é—á–∞–µ—Ç –∫–ª–∞—Å—Å—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ —Ñ—É–Ω–∫—Ü–∏–∏
    –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–ª–æ–≤–∞–º–∏.
"""
import logging
from database import Database
from config import config_logging
from buttons import translation_buttons

logger = logging.getLogger('utils')
config_logging()


class GameUtils:
    """
          –ö–ª–∞—Å—Å —Å —É—Ç–∏–ª–∏—Ç–∞–º–∏ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞.
    """

    def __init__(self, bot):
        self.bot = bot
        self.db = DatabaseUtils()

    def get_user_name(self, message):
        """
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

        :param bot: –û–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –µ–≥–æ –∏–º—è.
        """
        chat_id = message.chat.id
        self.bot.send_message(chat_id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
        self.bot.register_next_step_handler(message, self.save_user_name)

    def save_user_name(self, message):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –µ–≥–æ –∏–º—è.
        """
        chat_id = message.chat.id
        print(message.from_user.id)
        user_name = message.text

        self.db.seve_user(user_name)

        self.bot.send_message(chat_id, f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {user_name}!\n –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∏–≥—Ä–∞!!")
        self.start_game(message)

    def start_game(self, message):
        """
        –ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É, –ø—Ä–µ–¥–ª–∞–≥–∞—è —Å–ª–æ–≤–æ –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∞.

        :param message: –û–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        """
        chat_id = message.chat.id
        word = "–ú–∏—Ä"
        text_buttons = ["Tree", "Book", "vata"]
        correct_translation = "World"
        text_buttons.append(correct_translation)

        markup = translation_buttons(text_buttons)

        self.bot.send_message(chat_id, f"–ö–∞–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ '<b>{word}</b>'?",
                              reply_markup=markup, parse_mode="HTML")
        self.bot.register_next_step_handler_by_chat_id(chat_id, self.check_answer, correct_translation)

    def check_answer(self, message, correct_translation):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –≤—ã–±–æ—Ä–æ–º.
        :param correct_translation: str –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥.
        """
        chat_id = message.chat.id
        user_answer = message.text

        if user_answer == correct_translation:
            self.bot.send_message(chat_id, "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å! üåü +1 –±–∞–ª–ª!")
            self.start_game(message)
        else:
            self.bot.send_message(chat_id, "–ù–µ —Å–æ–≤—Å–µ–º —Ç–∞–∫. –ù–æ –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å! üíî -3 –±–∞–ª–ª–∞!")
            self.start_game(message)


class DatabaseUtils(Database):
    def __init__(self):
        super().__init__()

    def add_tabl(self):
        """
           –°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:
           - users: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.
           - word: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–æ–≤–∞—Ö –∏ –∏—Ö –ø–µ—Ä–µ–≤–æ–¥–∞—Ö.
           - users_word: —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–ª–æ–≤, –∞ —Ç–∞–∫–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–æ–≤ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞.
       """
        table_name_user = 'users'
        columns_user = [
            ('id', 'SERIAL PRIMARY KEY'),
            ('telegram_user_id', 'BIGINT NOT NULL UNIQUE'),
            ('name', 'VARCHAR(255)'),
            ('points', 'INTEGER DEFAULT 0')
        ]

        table_name_word = 'word'
        columns_word = [
            ('id', 'SERIAL PRIMARY KEY'),
            ('russian_words', 'VARCHAR(255)'),
            ('translation', 'VARCHAR(255)'),

        ]

        table_name_user_word = 'users_word'
        columns_user_word = [
            ('id', 'SERIAL PRIMARY KEY'),
            ('user_id', 'INTEGER REFERENCES users(id) ON DELETE CASCADE'),
            ('word_id', 'INTEGER REFERENCES word(id) ON DELETE CASCADE'),
            ('times_shown', 'INTEGER DEFAULT 0')
        ]

        self.create_table(table_name_user, columns_user)
        self.create_table(table_name_word, columns_word)
        self.create_table(table_name_user_word, columns_user_word)

    def seve_user(self, name):
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º {name} –ø–æ–ø–∞–ª –≤ –±–∞–∑—É')


if __name__ == '__main__':
    r = DatabaseUtils()
    r.add_tabl()
